NAME
====

**pandoc-zotxt.lua** - Look up bibliographic data of citations in Zotero


SYNOPSIS
========

**pandoc** **-L** *pandoc-zotxt.lua* **-C**


DESCRIPTION
===========

**pandoc-zotxt.lua** is a Lua filter for Pandoc that looks up citations in
Zotero and adds their bibliographic data to the "references" metadata field
or to a bibliography file, where Pandoc can pick it up.

You cite your sources using so-called "Better BibTeX citation keys" (provided
by Better BibTeX for Zotero) or "Easy Citekeys" (provided by zotxt) and then
tell **pandoc** to filter your document through **pandoc-zotxt.lua** before
processing citations. That's all there is to it.

For example:

.. code:: sh

   pandoc -L pandoc-zotxt.lua -C <<EOF
   See @DoeTitle2020 for details.
   EOF

If the "references" metadata field or a bibliography file already contains
bibliographic data for a citation, that citation will *not* be looked up
in Zotero.


CONNECTING TO ZOTERO
====================

Desktop client
--------------

By default, bibliographic data is fetched from the Zotero desktop client,
which must be running when you invoke **pandoc**. This is the faster, easier,
and less error-prone way to fetch citations from Zotero. However, you need
to install the zotxt add-on to use it.

Web API
-------

Bibliographic data can also be fetched from the Zotero Web API.

If you want to fetch data from your personal library, you need to create a
Zotero API key and set the metadata field "zotero-api-key" to that key:

.. code:: sh

   pandoc -L pandoc-zotxt.lua -C <<EOF
   ---
   zotero-api-key: MO2GHxbkLnWgCqPtpoewgwIl
   zotero-connectors: zoteroweb
   ...
   Look up @DoeTitle2020 via the Zotero Web API.
   EOF

You can also fetch bibliographic data from public Zotero groups, namely, by
listing the IDs of those groups in the metadata field "zotero-public-groups";
accessing public groups does not require an API key.

.. code:: sh

   pandoc -L pandoc-zotxt.lua -C <<EOF
   ---
   zotero-public-groups: 4532986
   zotero-connectors: zoteroweb
   ...
   Look up @DoeTitle2020 in the given public Zotero group.
   EOF

The Zotero Web API does *not* allow to search for citation keys other than
Zotero item IDs. Therefore, BetterBibTeX citation keys and Easy Citekeys
have to be translated into author names, title keywords, and publication
years; Better BibTeX citation keys are split up at uppercase letters and the
first of each series of digits ("DoeTitle2020" translates to: "Doe", "Title",
"2020"). Easy Citekeys are split up at the first colon and the last digit
("doe:2020title" translates to: "doe", "2020", "title"). Citation keys that
cannot be translated into at least two search terms are ignored.

If a search yields more than one item, you need to disambiguate those items by
adding the citation key to the "extra" field of the item that the citation key
should match. Zotero's "extra" field is a list of CSL key-value pairs; keys
and values are separated by colons (":"), key-value pairs by linefeeds. Use
the key "Citation key" or "Citekey" to add a citation key (e.g., "Citation
key: DoeTitle2020"); case is insignifcant. If you use Better BibTeX for
Zotero, you can add the citation key it has generated by 'pinning' it.

Support for accessing group libraries via the Zotero Web API is limited.
They are only searched if no item in your personal library matches.
Also, the "extra" field of items in group libraries is ignored.


CACHING SOURCES WITH A BIBLIOGRAPHY FILE
========================================

Bibliographic data can be added to a special bibliography file, rather than to
the "references" metadata field. This speeds up subsequent processing, because
data that has already been fetched from Zotero need not be fetched again.

To use such a bibliography file, set the "zotero-bibliography" metadata field
to a filename. If the filename is relative, it is interpreted as relative to
the directory of the first input file passed to **pandoc** or, if no input
files were given, as relative to the current working directory. The filename
may contain environment variables, which should be enclosed in ``${...}``
(e.g., ``${HOME}`` will be replaced with your home directory); any series
of *n* dollar signs will be replaced with *n* – 1 dollar signs, so that
you can escape dollar signs if they occur in filenames.

The bibliography file is added to the "bibliography" metadata field
automatically. You can safely set "zotero-bibliography" and "bibliography"
at the same time.

The format of the file is determined by its filename ending.

========== ==========
**Ending** **Format**
========== ==========
``.json``  CSL JSON
``.yaml``  CSL YAML
========== ==========

The items in the bibliography file are *not* updated or deleted automatically.
If you need to update them, delete the file, so that it will be regenerated
from scratch. You can also edit the file manually, of course.

For example:

.. code:: sh

   pandoc -L pandoc-zotxt.lua -C <<EOF
   ---
   zotero-bibliography: bibliography.json
   ...
   See @DoeTitle2020 for details.
   EOF


CITATION KEY TYPES
==================

You can use citation keys of multitple types:

=================== ========================== =============
**Name**            **Type**                   **Example**
=================== ========================== =============
``betterbibtexkey`` Better BibTeX citation key DoeTitle2020
``easykey``         Easy Citekey               doe:2020title
``key``             Zotero item ID             A1BC23D4
=================== ========================== =============

Better BibTeX citation keys are sometimes, if rarely, misinterpreted as Easy
Citekeys, which may cause the wrong item to be fetched.

If this happens, prefix the citation key with its type and a colon (":"):

.. code:: sh

   pandoc -L pandoc-zotxt.lua -C <<EOF
   Force @betterbibtexkey:DoeTitle to be treated as BetterBibTeX citation key.
   EOF

You can also force *all* citation keys to be interpreted as BetterBibTeX
citation keys by setting the "zotero-citekey-types" metadata field:

.. code:: sh

   pandoc -L pandoc-zotxt.lua -C <<EOF
   ---
   zotero-citekey-types: betterbibtexkey
   ...
   Force @DoeTitle to be treated as BetterBibTeX citation key.
   EOF


CONFIGURATION
=============

You can control how bibligraphic data is fetched by
setting the following metadata fields:

zotero-api-key
   A Zotero API key.
   Only applies to the '`Web API`_'.

zotero-bibliography
   A bibliography filename.
   See '`Caching sources with a bibliography file`_' above.

zotero-citekey-types
   A list of citation key types.
   Citation keys are assumed to be of one of the listed types only.
   See '`Citation key types`_' above.

zotero-connectors
   One or more Zotero ways to connect to Zotero:

   =========  =====================
   **Key**    **Fetch data from**
   =========  =====================
   zotxt      Zotero desktop client
   zoteroweb  Zotero Web API
   =========  =====================

   Data is fetched via the listed connectors only.

   By default, the Zotero desktop client is searched first. If you have
   set a Zotero API key and if the client could not be reached or some
   citations could not be found, the Web API is searched next.

zotero-groups
   A list of Zotero group IDs. Only the given groups are searched.
   By default, all groups you are a member of are searched.
   Only applies to the '`Web API`_'.

zotero-public-groups
   A list of Zotero group IDs.
   The given groups are searched in addition to non-public groups.
   Groups should be public. Only applies to the '`Web API`_'.

zotero-user-id
   A Zotero user ID. Looked up automatically if not given.
   Only applies to the '`Web API`_'.

If a metadata field expects a list of values, giving a single-item list is the
same as giving a single item; the following two examples are equivalent:

.. code:: sh

   pandoc -L pandoc-zotxt.lua -C <<EOF
   ---
   zotero-citekey-types:
       - betterbibtexkey
   ...
   See @DoeTitle2020 for details.
   EOF

.. code:: sh

   pandoc -L pandoc-zotxt.lua -C <<EOF
   ---
   zotero-citekey-types: betterbibtexkey
   ...
   See @DoeTitle2020 for details.
   EOF


KNOWN ISSUES
============

**pandoc-zotxt.lua** creates a temporary file when it adds bibliographic
data to a bibliography file. If Pandoc exits because it catches a signal
(e.g., because you press ``Ctrl``-``c``), this file will *not* be deleted.
This is a bug in Pandoc (issue #7355) and in the process of being fixed.
Moreover, if you are using Pandoc up to v2.7, another process may, mistakenly,
use the same temporary file at the same time, though this is highly unlikely.

A citation key may pick out the wrong item if it picks out a different items
depending on whether it is interpreted as a Better BibTeX citation key or as
an Easy Citekey. Set the 'zotero-citekey-types' metadata field or prefix the
citation key in question with its type and a colon (":") to avoid this (see
'`Citation key types`_' above for details).

Zotero v5.0.71 and v5.0.72 fail to handle HTTP requests from user agents
that do not set the "User Agent" HTTP header. And **pandoc** does not.
As a consequence, **pandoc-zotxt.lua** cannot retrieve data from these
versions of Zotero unless you tell **pandoc** to set that header.


SECURITY
========

If you are using Pandoc up to v2.7 and place the auto-generated bibliography
file in a directory that other users have write access to, then they can read
and change the content of that file, regardless of whether they have
permission to read or write the file itself.


SEE ALSO
========

- `zotxt <https://github.com/egh/zotxt>`_
- `Better BibTeX <https://retorque.re/zotero-better-bibtex/>`_

pandoc(1)
